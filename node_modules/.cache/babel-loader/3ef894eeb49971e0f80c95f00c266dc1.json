{"ast":null,"code":"var _jsxFileName = \"/home/contegris/Documents/React-Learning/Gmail/src/components/Mails/MailList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMessages } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends Component {\n  componentDidMount() {\n    this.props.fetchMessages();\n  } // renderAdmin(stream) {\n  //     if (stream.userId === this.props.currentUserId) {\n  //         return (\n  //             <div className=\"right floated content\">\n  //                 <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\n  //                 <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">Delete</Link>\n  //             </div>\n  //         )\n  //     }\n  // }\n  // renderList() {\n  //     return this.props.streams.map(stream => {\n  //         return (\n  //             <div className=\"item\" key={stream.id}>\n  //                 {this.renderAdmin(stream)}\n  //                 <i className=\"large middle aligned icon camera\" />\n  //                 <div className=\"content\">\n  //                     <Link to={`/streams/${stream.id}`} className=\"header\">\n  //                         {stream.title}\n  //                     </Link>\n  //                     <div className=\"description\">{stream.description}</div>\n  //                 </div>\n  //             </div>\n  //         )\n  //     })\n  // }\n\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          children: \"Create Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), this.renderCreate()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/home/contegris/Documents/React-Learning/Gmail/src/components/Mails/MailList.js"],"names":["React","Component","connect","fetchMessages","StreamList","componentDidMount","props","renderCreate","isSignedIn","textAlign","render","renderList","mapStateToProps","state","streams","Object","values","currentUserId","auth","userId","fetchStreams"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,eAA9B;;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAC/BI,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWH,aAAX;AACH,GAH8B,CAK/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAI,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKD,KAAL,CAAWE,UAAf,EAA2B;AACvB,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,cAAT;AAAwB,UAAA,SAAS,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAAiC,KAAKC,UAAL;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK,KAAKJ,YAAL,EAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AArD8B;;AAwDnC,MAAMK,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACC,OAApB,CADN;AAEHG,IAAAA,aAAa,EAAEJ,KAAK,CAACK,IAAN,CAAWC,MAFvB;AAGHX,IAAAA,UAAU,EAAEK,KAAK,CAACK,IAAN,CAAWV;AAHpB,GAAP;AAKH,CAND;;AAQA,eAAeN,OAAO,CAACU,eAAD,EAAkB;AAAEQ,EAAAA;AAAF,CAAlB,CAAP,CAA2ChB,UAA3C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMessages } from '../../actions';\n\nclass StreamList extends Component {\n    componentDidMount() {\n        this.props.fetchMessages()\n    }\n\n    // renderAdmin(stream) {\n    //     if (stream.userId === this.props.currentUserId) {\n    //         return (\n    //             <div className=\"right floated content\">\n    //                 <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\n    //                 <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">Delete</Link>\n    //             </div>\n    //         )\n    //     }\n    // }\n\n    // renderList() {\n    //     return this.props.streams.map(stream => {\n    //         return (\n    //             <div className=\"item\" key={stream.id}>\n    //                 {this.renderAdmin(stream)}\n    //                 <i className=\"large middle aligned icon camera\" />\n    //                 <div className=\"content\">\n    //                     <Link to={`/streams/${stream.id}`} className=\"header\">\n    //                         {stream.title}\n    //                     </Link>\n    //                     <div className=\"description\">{stream.description}</div>\n    //                 </div>\n    //             </div>\n    //         )\n    //     })\n    // }\n\n    renderCreate() {\n        if (this.props.isSignedIn) {\n            return (\n                <div style={{ textAlign: \"right\" }}>\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\n                        Create Stream\n                    </Link>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">{this.renderList()}</div>\n                {this.renderCreate()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn\n    }\n}\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}