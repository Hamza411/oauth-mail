{"ast":null,"code":"import streams from \"../apis/streams\";\nimport history from \"../history\";\nimport { SIGN_IN, SIGN_OUT // CREATE_STREAM,\n// FETCH_STREAMS,\n// FETCH_STREAM,\n// DELETE_STREAM,\n// EDIT_STREAM\n} from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post(\"/streams\", { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValue) => async dispatch => {\n  const response = await streams.patch(`/streams/${id}`, formValue);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n  history.push(\"/\");\n};","map":{"version":3,"sources":["/home/contegris/Documents/React-Learning/Gmail/src/actions/index.js"],"names":["streams","history","SIGN_IN","SIGN_OUT","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","CREATE_STREAM","data","push","fetchStreams","get","FETCH_STREAMS","fetchStream","id","FETCH_STREAM","editStream","formValue","patch","EDIT_STREAM","deleteStream","delete","DELETE_STREAM"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SACIC,OADJ,EAEIC,QAFJ,CAGI;AACA;AACA;AACA;AACA;AAPJ,OAQO,SARP;AAUA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEJ,OADH;AAEHK,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAEH;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMM,YAAY,GAAIC,UAAD,IAAgB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtE,QAAM;AAAEP,IAAAA;AAAF,MAAaO,QAAQ,GAAGC,IAA9B;AACA,QAAMC,QAAQ,GAAG,MAAMd,OAAO,CAACe,IAAR,CAAa,UAAb,EAAyB,EAAE,GAAGL,UAAL;AAAiBL,IAAAA;AAAjB,GAAzB,CAAvB;AACAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEU,aAAR;AAAuBT,IAAAA,OAAO,EAAEO,QAAQ,CAACG;AAAzC,GAAD,CAAR;AACAhB,EAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACH,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMR,QAAN,IAAkB;AAChD,QAAMG,QAAQ,GAAG,MAAMd,OAAO,CAACoB,GAAR,CAAY,UAAZ,CAAvB;AACAT,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEe,aAAR;AAAuBd,IAAAA,OAAO,EAAEO,QAAQ,CAACG;AAAzC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMK,WAAW,GAAIC,EAAD,IAAQ,MAAMZ,QAAN,IAAkB;AACjD,QAAMG,QAAQ,GAAG,MAAMd,OAAO,CAACoB,GAAR,CAAa,YAAWG,EAAG,EAA3B,CAAvB;AACAZ,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEkB,YAAR;AAAsBjB,IAAAA,OAAO,EAAEO,QAAQ,CAACG;AAAxC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMQ,UAAU,GAAG,CAACF,EAAD,EAAKG,SAAL,KAAmB,MAAMf,QAAN,IAAkB;AAC3D,QAAMG,QAAQ,GAAG,MAAMd,OAAO,CAAC2B,KAAR,CAAe,YAAWJ,EAAG,EAA7B,EAAgCG,SAAhC,CAAvB;AACAf,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEsB,WAAR;AAAqBrB,IAAAA,OAAO,EAAEO,QAAQ,CAACG;AAAvC,GAAD,CAAR;AACAhB,EAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACH,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAIN,EAAD,IAAQ,MAAMZ,QAAN,IAAkB;AAClD,QAAMX,OAAO,CAAC8B,MAAR,CAAgB,YAAWP,EAAG,EAA9B,CAAN;AACAZ,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEyB,aAAR;AAAuBxB,IAAAA,OAAO,EAAEgB;AAAhC,GAAD,CAAR;AACAtB,EAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACH,CAJM","sourcesContent":["import streams from \"../apis/streams\";\nimport history from \"../history\";\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    // CREATE_STREAM,\n    // FETCH_STREAMS,\n    // FETCH_STREAM,\n    // DELETE_STREAM,\n    // EDIT_STREAM\n} from './types';\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n}\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n}\n\nexport const createStream = (formValues) => async (dispatch, getState) => {\n    const { userId } = getState().auth;\n    const response = await streams.post(\"/streams\", { ...formValues, userId });\n    dispatch({ type: CREATE_STREAM, payload: response.data })\n    history.push(\"/\")\n};\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get(\"/streams\");\n    dispatch({ type: FETCH_STREAMS, payload: response.data })\n}\n\nexport const fetchStream = (id) => async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({ type: FETCH_STREAM, payload: response.data })\n}\n\nexport const editStream = (id, formValue) => async dispatch => {\n    const response = await streams.patch(`/streams/${id}`, formValue);\n    dispatch({ type: EDIT_STREAM, payload: response.data })\n    history.push(\"/\")\n}\n\nexport const deleteStream = (id) => async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({ type: DELETE_STREAM, payload: id })\n    history.push(\"/\")\n}\n"]},"metadata":{},"sourceType":"module"}