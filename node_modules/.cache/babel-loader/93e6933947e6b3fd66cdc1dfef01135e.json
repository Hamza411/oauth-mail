{"ast":null,"code":"import mails from \"../apis/mails\";\nimport history from \"../history\";\nimport { SIGN_IN, SIGN_OUT, SEND_MESSAGE, FETCH_MESSAGES, FETCH_MESSAGE, DELETE_MESSAGE } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post(\"/streams\", { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValue) => async dispatch => {\n  const response = await streams.patch(`/streams/${id}`, formValue);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n  history.push(\"/\");\n};","map":{"version":3,"sources":["/home/contegris/Documents/React-Learning/Gmail/src/actions/index.js"],"names":["mails","history","SIGN_IN","SIGN_OUT","SEND_MESSAGE","FETCH_MESSAGES","FETCH_MESSAGE","DELETE_MESSAGE","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","streams","post","CREATE_STREAM","data","push","fetchStreams","get","FETCH_STREAMS","fetchStream","id","FETCH_STREAM","editStream","formValue","patch","EDIT_STREAM","deleteStream","delete","DELETE_STREAM"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SACIC,OADJ,EAEIC,QAFJ,EAGIC,YAHJ,EAIIC,cAJJ,EAKIC,aALJ,EAMIC,cANJ,QAOO,SAPP;AASA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAER,OADH;AAEHS,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAEP;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMU,YAAY,GAAIC,UAAD,IAAgB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtE,QAAM;AAAEP,IAAAA;AAAF,MAAaO,QAAQ,GAAGC,IAA9B;AACA,QAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,IAAR,CAAa,UAAb,EAAyB,EAAE,GAAGN,UAAL;AAAiBL,IAAAA;AAAjB,GAAzB,CAAvB;AACAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEW,aAAR;AAAuBV,IAAAA,OAAO,EAAEO,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACArB,EAAAA,OAAO,CAACsB,IAAR,CAAa,GAAb;AACH,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMT,QAAN,IAAkB;AAChD,QAAMG,QAAQ,GAAG,MAAMC,OAAO,CAACM,GAAR,CAAY,UAAZ,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEgB,aAAR;AAAuBf,IAAAA,OAAO,EAAEO,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMK,WAAW,GAAIC,EAAD,IAAQ,MAAMb,QAAN,IAAkB;AACjD,QAAMG,QAAQ,GAAG,MAAMC,OAAO,CAACM,GAAR,CAAa,YAAWG,EAAG,EAA3B,CAAvB;AACAb,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEmB,YAAR;AAAsBlB,IAAAA,OAAO,EAAEO,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMQ,UAAU,GAAG,CAACF,EAAD,EAAKG,SAAL,KAAmB,MAAMhB,QAAN,IAAkB;AAC3D,QAAMG,QAAQ,GAAG,MAAMC,OAAO,CAACa,KAAR,CAAe,YAAWJ,EAAG,EAA7B,EAAgCG,SAAhC,CAAvB;AACAhB,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEuB,WAAR;AAAqBtB,IAAAA,OAAO,EAAEO,QAAQ,CAACI;AAAvC,GAAD,CAAR;AACArB,EAAAA,OAAO,CAACsB,IAAR,CAAa,GAAb;AACH,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAIN,EAAD,IAAQ,MAAMb,QAAN,IAAkB;AAClD,QAAMI,OAAO,CAACgB,MAAR,CAAgB,YAAWP,EAAG,EAA9B,CAAN;AACAb,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE0B,aAAR;AAAuBzB,IAAAA,OAAO,EAAEiB;AAAhC,GAAD,CAAR;AACA3B,EAAAA,OAAO,CAACsB,IAAR,CAAa,GAAb;AACH,CAJM","sourcesContent":["import mails from \"../apis/mails\";\nimport history from \"../history\";\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    SEND_MESSAGE,\n    FETCH_MESSAGES,\n    FETCH_MESSAGE,\n    DELETE_MESSAGE\n} from './types';\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n}\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n}\n\nexport const createStream = (formValues) => async (dispatch, getState) => {\n    const { userId } = getState().auth;\n    const response = await streams.post(\"/streams\", { ...formValues, userId });\n    dispatch({ type: CREATE_STREAM, payload: response.data })\n    history.push(\"/\")\n};\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get(\"/streams\");\n    dispatch({ type: FETCH_STREAMS, payload: response.data })\n}\n\nexport const fetchStream = (id) => async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({ type: FETCH_STREAM, payload: response.data })\n}\n\nexport const editStream = (id, formValue) => async dispatch => {\n    const response = await streams.patch(`/streams/${id}`, formValue);\n    dispatch({ type: EDIT_STREAM, payload: response.data })\n    history.push(\"/\")\n}\n\nexport const deleteStream = (id) => async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({ type: DELETE_STREAM, payload: id })\n    history.push(\"/\")\n}\n"]},"metadata":{},"sourceType":"module"}