{"ast":null,"code":"var _jsxFileName = \"/home/contegris/Documents/React-Learning/Gmail/src/components/GoogleAuth.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getId());\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.client.init({\n      'apiKey': 'AIzaSyDqTkgLrbg4aJy9bPhT2iL5ETNJ43y6CB4',\n      'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/translate/v2/rest']\n    }).then(function () {\n      // Executes an API request, and returns a Promise.\n      // The method name `language.translations.list` comes from the API discovery.\n      return gapi.client.language.translations.list({\n        q: 'hello world',\n        source: 'en',\n        target: 'de'\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" ui red google button\",\n        onClick: this.onSignOutClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), \"SignOut\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" ui red google button\",\n        onClick: this.onSignInClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), \"SignIn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/contegris/Documents/React-Learning/Gmail/src/components/GoogleAuth.js"],"names":["React","Component","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","componentDidMount","window","gapi","client","init","then","language","translations","list","q","source","target","renderAuthButton","render","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAgB/BK,YAhB+B,GAgBfC,UAAD,IAAgB;AAC3B,UAAIA,UAAJ,EAAgB;AACZ,aAAKC,KAAL,CAAWL,MAAX,CAAkB,KAAKM,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB;AACH,OAFD,MAEO;AACH,aAAKJ,KAAL,CAAWJ,OAAX;AACH;AACJ,KAtB8B;;AAAA,SAwB/BS,aAxB+B,GAwBf,MAAM;AAClB,WAAKJ,IAAL,CAAUN,MAAV;AACH,KA1B8B;;AAAA,SA4B/BW,cA5B+B,GA4Bd,MAAM;AACnB,WAAKL,IAAL,CAAUL,OAAV;AACH,KA9B8B;AAAA;;AAC/BW,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwB;AACpB,gBAAU,yCADU;AAEpB,uBAAiB,CAAC,gEAAD;AAFG,KAAxB,EAGGC,IAHH,CAGQ,YAAY;AAChB;AACA;AACA,aAAOH,IAAI,CAACC,MAAL,CAAYG,QAAZ,CAAqBC,YAArB,CAAkCC,IAAlC,CAAuC;AAC1CC,QAAAA,CAAC,EAAE,aADuC;AAE1CC,QAAAA,MAAM,EAAE,IAFkC;AAG1CC,QAAAA,MAAM,EAAE;AAHkC,OAAvC,CAAP;AAKH,KAXD;AAYH;;AAkBDC,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKnB,KAAL,CAAWD,UAAX,KAA0B,IAA9B,EAAoC;AAChC,aAAO,IAAP;AACH,KAFD,MAGK,IAAI,KAAKC,KAAL,CAAWD,UAAf,EAA2B;AAC5B,0BACI;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAE,KAAKO,cAAxD;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPI,MAQA;AACD,0BACI;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAE,KAAKD,aAAxD;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;AACJ;;AAEDe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACK,KAAKD,gBAAL;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA5D8B;;AA+DnC,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAExB,IAAAA,UAAU,EAAEuB,KAAK,CAACrB,IAAN,CAAWF;AAAzB,GAAP;AACH,CAFD;;AAIA,eAAeL,OAAO,CAAC2B,eAAD,EAAkB;AAAE1B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\n\nclass GoogleAuth extends Component {\n    componentDidMount() {\n        window.gapi.client.init({\n            'apiKey': 'AIzaSyDqTkgLrbg4aJy9bPhT2iL5ETNJ43y6CB4',\n            'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/translate/v2/rest'],\n        }).then(function () {\n            // Executes an API request, and returns a Promise.\n            // The method name `language.translations.list` comes from the API discovery.\n            return gapi.client.language.translations.list({\n                q: 'hello world',\n                source: 'en',\n                target: 'de',\n            });\n        });\n    }\n\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn) {\n            this.props.signIn(this.auth.currentUser.get().getId());\n        } else {\n            this.props.signOut();\n        }\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    }\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    }\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null\n        }\n        else if (this.props.isSignedIn) {\n            return (\n                <button className=\" ui red google button\" onClick={this.onSignOutClick}>\n                    <i className=\"google icon\" />\n                    SignOut\n                </button>\n            )\n        }\n        else {\n            return (\n                <button className=\" ui red google button\" onClick={this.onSignInClick}>\n                    <i className=\"google icon\" />\n                    SignIn\n                </button>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { isSignedIn: state.auth.isSignedIn }\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}