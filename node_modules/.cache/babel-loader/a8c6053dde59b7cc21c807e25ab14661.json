{"ast":null,"code":"var _jsxFileName = \"/home/contegris/Documents/React-Learning/Gmail/src/components/GoogleAuth.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        const id = this.auth.currentUser.get().getId();\n        const email = this.auth.currentUser.get().getBasicProfile().getEmail();\n        const token = this.auth.currentUser.get().getAuthResponse().access_token;\n        this.props.signIn(id, email); // console.log(\"id\", this.auth.currentUser.get().getId());\n        // console.log(\"Complete User\", this.auth.currentUser.get());\n        // console.log(\"Email\", this.auth.currentUser.get().getBasicProfile().getEmail());\n        // console.log(\"access token\", token)\n\n        var data = {\n          \"grant_type\": \"client_credentials\",\n          \"scope\": \"https://mail.google.com/\",\n          \"client_id\": \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n          \"client_secret\": \"C3FdvDVO4nzBgRb079-ve828\"\n        };\n        var config = {\n          headers: {\n            'Authorization': \"BEARER \" + token,\n            \"Accept\": \"application/json\",\n            \"scope\": \"https://mail.google.com\"\n          }\n        }; // console.log(user_mail_id);\n\n        axios.get(`https://www.googleapis.com/gmail/v1/users/${email}/messages/`, data).then(function (response) {\n          console.log(response);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        /* ayns actions or async api req*/\n        clientId: \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n        scope: \"https://mail.google.com/\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" ui red google button\",\n        onClick: this.onSignOutClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), \"SignOut\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" ui red google button\",\n        onClick: this.onSignInClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), \"SignIn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/contegris/Documents/React-Learning/Gmail/src/components/GoogleAuth.js"],"names":["axios","React","Component","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","id","auth","currentUser","get","getId","email","getBasicProfile","getEmail","token","getAuthResponse","access_token","props","data","config","headers","then","response","console","log","catch","error","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","auth2","getAuthInstance","listen","renderAuthButton","render","mapStateToProps","state","ownProps"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\n\nclass GoogleAuth extends Component {\n    componentDidMount() {\n        window.gapi.load(\"client:auth2\", () => {\n            window.gapi.client.init({        /* ayns actions or async api req*/\n                clientId: \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n                scope: \"https://mail.google.com/\"\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange)\n            });\n        });\n    }\n\n\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn) {\n            const id = this.auth.currentUser.get().getId();\n            const email = this.auth.currentUser.get().getBasicProfile().getEmail()\n            const token = this.auth.currentUser.get().getAuthResponse().access_token\n            this.props.signIn(id, email);\n            // console.log(\"id\", this.auth.currentUser.get().getId());\n            // console.log(\"Complete User\", this.auth.currentUser.get());\n            // console.log(\"Email\", this.auth.currentUser.get().getBasicProfile().getEmail());\n            // console.log(\"access token\", token)\n            var data = {\n                \"grant_type\": \"client_credentials\",\n                \"scope\": \"https://mail.google.com/\",\n                \"client_id\": \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n                \"client_secret\": \"C3FdvDVO4nzBgRb079-ve828\"\n            };\n            var config = {\n                headers: {\n                    'Authorization': \"BEARER \" + token,\n                    \"Accept\": \"application/json\",\n                    \"scope\": \"https://mail.google.com\"\n                },\n            }\n            // console.log(user_mail_id);\n            axios.get(`https://www.googleapis.com/gmail/v1/users/${email}/messages/`, data)\n                .then(function (response) {\n                    console.log(response);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        } else {\n            this.props.signOut();\n        }\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    }\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    }\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null\n        }\n        else if (this.props.isSignedIn) {\n            return (\n                <button className=\" ui red google button\" onClick={this.onSignOutClick}>\n                    <i className=\"google icon\" />\n                    SignOut\n                </button>\n            )\n        }\n        else {\n            return (\n                <button className=\" ui red google button\" onClick={this.onSignInClick}>\n                    <i className=\"google icon\" />\n                    SignIn\n                </button>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { isSignedIn: state.auth.isSignedIn }\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}