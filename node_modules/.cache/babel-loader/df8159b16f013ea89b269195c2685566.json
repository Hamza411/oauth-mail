{"ast":null,"code":"var _jsxFileName = \"/home/contegris/Documents/React-Learning/Gmail/src/components/GoogleAuth.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        const id = this.auth.currentUser.get().getId();\n        const email = this.auth.currentUser.get().getBasicProfile().getEmail();\n        const token = this.auth.currentUser.get().getAuthResponse().access_token;\n        this.props.signIn(id, email); // console.log(\"id\", this.auth.currentUser.get().getId());\n        // console.log(\"Complete User\", this.auth.currentUser.get());\n        // console.log(\"Email\", this.auth.currentUser.get().getBasicProfile().getEmail());\n        // console.log(\"access token\", token)\n\n        axios.request({\n          url: \"/oauth/token\",\n          method: \"get\",\n          baseURL: \"https://api.lyft.com/\",\n          auth: {\n            username: \"hamzasaleam@gmail.com\",\n            password: \"lahore@123r\"\n          },\n          data: {\n            \"grant_type\": \"client_credentials\",\n            \"scope\": \"https://mail.google.com/\"\n          }\n        }).then(function (res) {\n          console.log(res);\n        });\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        /* ayns actions or async api req*/\n        clientId: \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n        scope: \"https://mail.google.com/\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" ui red google button\",\n        onClick: this.onSignOutClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), \"SignOut\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" ui red google button\",\n        onClick: this.onSignInClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), \"SignIn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/contegris/Documents/React-Learning/Gmail/src/components/GoogleAuth.js"],"names":["axios","React","Component","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","id","auth","currentUser","get","getId","email","getBasicProfile","getEmail","token","getAuthResponse","access_token","props","request","url","method","baseURL","username","password","data","then","res","console","log","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","auth2","getAuthInstance","listen","renderAuthButton","render","mapStateToProps","state","ownProps"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\n\nclass GoogleAuth extends Component {\n    componentDidMount() {\n        window.gapi.load(\"client:auth2\", () => {\n            window.gapi.client.init({        /* ayns actions or async api req*/\n                clientId: \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n                scope: \"https://mail.google.com/\"\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange)\n            });\n        });\n    }\n\n\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn) {\n            const id = this.auth.currentUser.get().getId();\n            const email = this.auth.currentUser.get().getBasicProfile().getEmail()\n            const token = this.auth.currentUser.get().getAuthResponse().access_token\n            this.props.signIn(id, email);\n            // console.log(\"id\", this.auth.currentUser.get().getId());\n            // console.log(\"Complete User\", this.auth.currentUser.get());\n            // console.log(\"Email\", this.auth.currentUser.get().getBasicProfile().getEmail());\n            // console.log(\"access token\", token)\n\n            axios.request({\n                url: \"/oauth/token\",\n                method: \"get\",\n                baseURL: \"https://api.lyft.com/\",\n                auth: {\n                  username: \"hamzasaleam@gmail.com\",\n                  password: \"lahore@123r\"\n                },\n                data: {\n                  \"grant_type\": \"client_credentials\",\n                  \"scope\": \"https://mail.google.com/\"    \n                }\n              }).then(function(res) {\n                console.log(res);  \n              });\n           \n        } else {\n            this.props.signOut();\n        }\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    }\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    }\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null\n        }\n        else if (this.props.isSignedIn) {\n            return (\n                <button className=\" ui red google button\" onClick={this.onSignOutClick}>\n                    <i className=\"google icon\" />\n                    SignOut\n                </button>\n            )\n        }\n        else {\n            return (\n                <button className=\" ui red google button\" onClick={this.onSignInClick}>\n                    <i className=\"google icon\" />\n                    SignIn\n                </button>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { isSignedIn: state.auth.isSignedIn }\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}