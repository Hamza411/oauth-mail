{"ast":null,"code":"import streams from \"../apis/streams\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const response = await streams.post(\"/streams\", { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValue) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValue);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/home/contegris/Documents/React-Learning/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","response","post","data","fetchStreams","get","fetchStream","id","editStream","formValue","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SACIC,OADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,WAPJ,QAQO,SARP;AAUA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAET,OADH;AAEHU,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAIC,UAAD,IAAgB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtE,QAAMC,QAAQ,GAAG,MAAMjB,OAAO,CAACkB,IAAR,CAAa,UAAb,EAAyB,EAAE,GAAGJ,UAAL;AAAiBL,IAAAA;AAAjB,GAAzB,CAAvB;AACAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,aAAR;AAAuBQ,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAML,QAAN,IAAkB;AAChD,QAAME,QAAQ,GAAG,MAAMjB,OAAO,CAACqB,GAAR,CAAY,UAAZ,CAAvB;AACAN,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ,MAAMR,QAAN,IAAkB;AACjD,QAAME,QAAQ,GAAG,MAAMjB,OAAO,CAACqB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AACAR,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,YAAR;AAAsBM,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKE,SAAL,KAAmB,MAAMV,QAAN,IAAkB;AAC3D,QAAME,QAAQ,GAAG,MAAMjB,OAAO,CAAC0B,GAAR,CAAa,YAAWH,EAAG,EAA3B,EAA8BE,SAA9B,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEH,WAAR;AAAqBI,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMQ,YAAY,GAAIJ,EAAD,IAAQ,MAAMR,QAAN,IAAkB;AAClD,QAAMf,OAAO,CAAC4B,MAAR,CAAgB,YAAWL,EAAG,EAA9B,CAAN;AACAR,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEJ,aAAR;AAAuBK,IAAAA,OAAO,EAAEY;AAAhC,GAAD,CAAR;AACH,CAHM","sourcesContent":["import streams from \"../apis/streams\"\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_STREAM,\n    FETCH_STREAMS,\n    FETCH_STREAM,\n    DELETE_STREAM,\n    EDIT_STREAM\n} from './types';\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n}\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n}\n\nexport const createStream = (formValues) => async (dispatch, getState) => {\n    const response = await streams.post(\"/streams\", { ...formValues, userId });\n    dispatch({ type: CREATE_STREAM, payload: response.data })\n};\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get(\"/streams\");\n    dispatch({ type: FETCH_STREAMS, payload: response.data })\n}\n\nexport const fetchStream = (id) => async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({ type: FETCH_STREAM, payload: response.data })\n}\n\nexport const editStream = (id, formValue) => async dispatch => {\n    const response = await streams.put(`/streams/${id}`, formValue);\n    dispatch({ type: EDIT_STREAM, payload: response.data })\n}\n\nexport const deleteStream = (id) => async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({ type: DELETE_STREAM, payload: id })\n}\n"]},"metadata":{},"sourceType":"module"}