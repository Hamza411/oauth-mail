{"ast":null,"code":"var _jsxFileName = \"/home/contegris/Documents/React-Learning/Gmail/src/components/Mails/MailForm.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MailForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n          autoComplete: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this) // <input onChange={formProps.input.onChange}\n      //     value={formProps.input.value}\n      // />\n      ;\n    };\n\n    this.onSubmit = formValues => {\n      this.props.onSubmit(formValues);\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"From\",\n        component: this.renderInput,\n        label: \"From\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"To\",\n        component: this.renderInput,\n        label: \"To\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"Subject\",\n        component: this.renderInput,\n        label: \"Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"ui button primary\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button primary\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.Sender) {\n    errors.Sender = \"Sender is Required\";\n  }\n\n  if (!formValues.Reciever) {\n    errors.Reciever = \"Reciever is Required\";\n  }\n\n  if (!formValues.Subject) {\n    errors.Subject = \"Subject is Required\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"Description is required\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"mailForm\",\n  validate\n})(MailForm);","map":{"version":3,"sources":["/home/contegris/Documents/React-Learning/Gmail/src/components/Mails/MailForm.js"],"names":["React","Component","Link","Field","reduxForm","MailForm","renderInput","input","label","meta","renderError","onSubmit","formValues","props","error","touched","fontSize","color","render","handleSubmit","validate","errors","Sender","Reciever","Subject","description","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\n\nclass MailForm extends Component {\n\n    renderError({ error, touched }) {\n        if (touched && error) {\n            return <div style={{ fontSize: 12, color: \"red\" }}>{error}</div>\n        }\n    }\n\n    renderInput = ({ input, label, meta }) => {\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <input {...input} autoComplete=\"on\" />\n                {this.renderError(meta)}\n                {/* <div style={{ fontSize: 12, color: \"red\" }}>{meta.error}</div> */}\n            </div>\n            // <input onChange={formProps.input.onChange}\n            //     value={formProps.input.value}\n            // />\n        )\n    }\n\n    onSubmit = (formValues) => {\n        this.props.onSubmit(formValues)\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\n                <Field name=\"From\" component={this.renderInput} label=\"From\" />\n                <Field name=\"To\" component={this.renderInput} label=\"To\" />\n                <Field name=\"Subject\" component={this.renderInput} label=\"Subject\" />\n                <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\n                <Link to=\"/\" className=\"ui button primary\">Back</Link>\n                <button className=\"ui button primary\">Send</button>\n            </form>\n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n\n    if (!formValues.Sender) {\n        errors.Sender = \"Sender is Required\"\n    }\n    if (!formValues.Reciever) {\n        errors.Reciever = \"Reciever is Required\"\n    }\n    if (!formValues.Subject) {\n        errors.Subject = \"Subject is Required\"\n    }\n    if (!formValues.description) {\n        errors.description = \"Description is required\"\n    }\n    return errors\n}\n\nexport default reduxForm({\n    form: \"mailForm\",\n    validate\n})(MailForm);\n"]},"metadata":{},"sourceType":"module"}