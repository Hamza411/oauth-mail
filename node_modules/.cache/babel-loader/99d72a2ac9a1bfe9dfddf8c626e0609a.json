{"ast":null,"code":"var _jsxFileName = \"/home/contegris/Documents/React-Learning/Gmail/src/components/GoogleAuth.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getId());\n        console.log(\"id\", this.auth.currentUser.get().getId());\n        console.log(\"Complete User\", this.auth.currentUser.get());\n        console.log(\"Email\", this.auth.currentUser.get().getBasicProfile().getEmail());\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    // window.gapi.load(\"client:auth2\", () => {\n    //     window.gapi.client.init({        /* ayns actions or async api req*/\n    //         clientId: \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n    //         scope: \"https://mail.google.com/\"\n    //     }).then(() => {\n    //         this.auth = window.gapi.auth2.getAuthInstance();\n    //         this.onAuthChange(this.auth.isSignedIn.get());\n    //         this.auth.isSignedIn.listen(this.onAuthChange)\n    //     });\n    // });\n    const user_mail_id = localStorage.getItem('user_mail_id');\n    const access_token = localStorage.getItem('access_token');\n    console.log(access_token);\n    var config = {\n      headers: {\n        'Authorization': \"BEARER \" + access_token,\n        \"Accept\": \"application/json\",\n        \"scope\": \"https://mail.google.com/\"\n      }\n    };\n    console.log(user_mail_id);\n    axios.get('https://www.googleapis.com/gmail/v1/users/' + user_mail_id + '/messages/', config).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" ui red google button\",\n        onClick: this.onSignOutClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), \"SignOut\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" ui red google button\",\n        onClick: this.onSignInClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), \"SignIn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/contegris/Documents/React-Learning/Gmail/src/components/GoogleAuth.js"],"names":["axios","React","Component","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","console","log","getBasicProfile","getEmail","onSignInClick","onSignOutClick","componentDidMount","user_mail_id","localStorage","getItem","access_token","config","headers","then","response","catch","error","renderAuthButton","render","mapStateToProps","state","ownProps"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\n\nclass GoogleAuth extends Component {\n    componentDidMount() {\n        // window.gapi.load(\"client:auth2\", () => {\n        //     window.gapi.client.init({        /* ayns actions or async api req*/\n        //         clientId: \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n        //         scope: \"https://mail.google.com/\"\n        //     }).then(() => {\n        //         this.auth = window.gapi.auth2.getAuthInstance();\n        //         this.onAuthChange(this.auth.isSignedIn.get());\n        //         this.auth.isSignedIn.listen(this.onAuthChange)\n        //     });\n        // });\n\n        const user_mail_id = localStorage.getItem('user_mail_id');\n        const access_token = localStorage.getItem('access_token');\n        console.log(access_token);\n        var config = {\n            headers: {\n                'Authorization': \"BEARER \" + access_token,\n                \"Accept\": \"application/json\",\n                \"scope\": \"https://mail.google.com/\"\n            },\n        }\n        console.log(user_mail_id);\n        axios.get('https://www.googleapis.com/gmail/v1/users/' +\n            user_mail_id\n            + '/messages/', config)\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn) {\n            this.props.signIn(this.auth.currentUser.get().getId());\n            console.log(\"id\", this.auth.currentUser.get().getId());\n            console.log(\"Complete User\", this.auth.currentUser.get());\n            console.log(\"Email\", this.auth.currentUser.get().getBasicProfile().getEmail());\n        } else {\n            this.props.signOut();\n        }\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    }\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    }\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null\n        }\n        else if (this.props.isSignedIn) {\n            return (\n                <button className=\" ui red google button\" onClick={this.onSignOutClick}>\n                    <i className=\"google icon\" />\n                    SignOut\n                </button>\n            )\n        }\n        else {\n            return (\n                <button className=\" ui red google button\" onClick={this.onSignInClick}>\n                    <i className=\"google icon\" />\n                    SignIn\n                </button>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { isSignedIn: state.auth.isSignedIn }\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}