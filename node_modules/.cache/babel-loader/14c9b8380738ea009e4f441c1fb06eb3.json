{"ast":null,"code":"var _jsxFileName = \"/home/contegris/Documents/React-Learning/Gmail/src/components/GoogleAuth.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        const id = this.auth.currentUser.get().getId();\n        const email = this.auth.currentUser.get().getBasicProfile().getEmail();\n        const token = this.auth.currentUser.get().getAuthResponse().access_token;\n        this.props.signIn(id, email); // console.log(\"Complete Object\", this.auth.currentUser.get());\n        // console.log(\"id\", this.auth.currentUser.get().getId());\n        // console.log(\"Email\", this.auth.currentUser.get().getBasicProfile().getEmail());\n        // console.log(\"access token\", token)\n\n        const url = `https://gmail.googleapis.com/gmail/v1/users/${email}/messages`;\n        const data = {\n          grant_type: \"client_credentials\"\n        };\n        const auth = {\n          username: \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n          password: \"C3FdvDVO4nzBgRb079-ve828\"\n        };\n        const options = {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          // data: qs.stringify(data),\n          auth: auth,\n          url\n        };\n        axios(options).then(response => {\n          console.log(response.data);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        /* ayns actions or async api req*/\n        clientId: \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n        scope: \"https://mail.google.com/\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" ui red google button\",\n        onClick: this.onSignOutClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), \"SignOut\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" ui red google button\",\n        onClick: this.onSignInClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), \"SignIn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/contegris/Documents/React-Learning/Gmail/src/components/GoogleAuth.js"],"names":["axios","React","Component","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","id","auth","currentUser","get","getId","email","getBasicProfile","getEmail","token","getAuthResponse","access_token","props","url","data","grant_type","username","password","options","method","headers","then","response","console","log","catch","err","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","auth2","getAuthInstance","listen","renderAuthButton","render","mapStateToProps","state","ownProps"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\n\nclass GoogleAuth extends Component {\n    componentDidMount() {\n        window.gapi.load(\"client:auth2\", () => {\n            window.gapi.client.init({        /* ayns actions or async api req*/\n                clientId: \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n                scope: \"https://mail.google.com/\"\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange)\n            });\n        });\n    }\n\n\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn) {\n            const id = this.auth.currentUser.get().getId();\n            const email = this.auth.currentUser.get().getBasicProfile().getEmail()\n            const token = this.auth.currentUser.get().getAuthResponse().access_token\n            this.props.signIn(id, email);\n            // console.log(\"Complete Object\", this.auth.currentUser.get());\n            // console.log(\"id\", this.auth.currentUser.get().getId());\n            // console.log(\"Email\", this.auth.currentUser.get().getBasicProfile().getEmail());\n            // console.log(\"access token\", token)\n            const url = `https://gmail.googleapis.com/gmail/v1/users/${email}/messages`;\n\n            const data = {\n                grant_type: \"client_credentials\",\n            };\n\n            const auth = {\n                username: \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n                password: \"C3FdvDVO4nzBgRb079-ve828\",\n            };\n\n            const options = {\n                method: \"get\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\n                },\n                // data: qs.stringify(data),\n                auth: auth,\n                url,\n            };\n\n            axios(options)\n                .then((response) => {\n                    console.log(response.data);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            this.props.signOut();\n        }\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    }\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    }\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null\n        }\n        else if (this.props.isSignedIn) {\n            return (\n                <button className=\" ui red google button\" onClick={this.onSignOutClick}>\n                    <i className=\"google icon\" />\n                    SignOut\n                </button>\n            )\n        }\n        else {\n            return (\n                <button className=\" ui red google button\" onClick={this.onSignInClick}>\n                    <i className=\"google icon\" />\n                    SignIn\n                </button>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { isSignedIn: state.auth.isSignedIn }\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}