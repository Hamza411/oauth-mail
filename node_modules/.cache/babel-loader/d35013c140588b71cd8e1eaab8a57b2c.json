{"ast":null,"code":"var _jsxFileName = \"/home/contegris/Documents/React-Learning/Gmail/src/components/Mails/MailList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMessages } from '../../actions';\nimport GoogleAuth from '../GoogleAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MailList extends Component {\n  componentDidMount() {\n    this.props.fetchMessages();\n  } // renderAdmin(stream) {\n  //     if (stream.userId === this.props.currentUserId) {\n  //         return (\n  //             <div className=\"right floated content\">\n  //                 <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\n  //                 <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">Delete</Link>\n  //             </div>\n  //         )\n  //     }\n  // }\n\n\n  renderList() {\n    return this.props.mails.map(threads => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [threads.snippet, console.log(\"*************\", {\n            threads\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    });\n  } // renderCreate() {\n  //     if (this.props.isSignedIn) {\n  //         return (\n  //             <div style={{ textAlign: \"right\" }}>\n  //                 <Link to=\"/streams/new\" className=\"ui button primary\">\n  //                     Create Stream\n  //                 </Link>\n  //             </div>\n  //         )\n  //     }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(GoogleAuth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), this.renderList()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    mails: Object.values(state.mails),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMessages\n})(MailList);","map":{"version":3,"sources":["/home/contegris/Documents/React-Learning/Gmail/src/components/Mails/MailList.js"],"names":["React","Component","connect","fetchMessages","GoogleAuth","MailList","componentDidMount","props","renderList","mails","map","threads","snippet","console","log","render","mapStateToProps","state","Object","values","currentUserId","auth","userId","isSignedIn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,aAAX;AACH,GAH4B,CAK7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAK,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,GAAjB,CAAqBC,OAAO,IAAI;AACnC,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,qBACKA,OAAO,CAACC,OADb,EAEKC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B;AAACH,YAAAA;AAAD,WAA7B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVM,CAAP;AAWH,GA5B4B,CA8B7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAIK,KAAKP,UAAL,EAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAnD4B;;AAsDjC,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,KAAK,EAAES,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACR,KAApB,CADJ;AAEHW,IAAAA,aAAa,EAAEH,KAAK,CAACI,IAAN,CAAWC,MAFvB;AAGHC,IAAAA,UAAU,EAAEN,KAAK,CAACI,IAAN,CAAWE;AAHpB,GAAP;AAKH,CAND;;AAQA,eAAerB,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA4CE,QAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMessages } from '../../actions';\nimport GoogleAuth from '../GoogleAuth';\n\nclass MailList extends Component {\n    componentDidMount() {\n        this.props.fetchMessages()\n    }\n\n    // renderAdmin(stream) {\n    //     if (stream.userId === this.props.currentUserId) {\n    //         return (\n    //             <div className=\"right floated content\">\n    //                 <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\n    //                 <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">Delete</Link>\n    //             </div>\n    //         )\n    //     }\n    // }\n\n    renderList() {\n        return this.props.mails.map(threads => {\n            return (\n                <div className=\"item\">\n                    <div className=\"content\">\n                        {threads.snippet}\n                        {console.log(\"*************\", {threads})}\n                        {/* <div className=\"description\">{stream.description}</div> */}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    // renderCreate() {\n    //     if (this.props.isSignedIn) {\n    //         return (\n    //             <div style={{ textAlign: \"right\" }}>\n    //                 <Link to=\"/streams/new\" className=\"ui button primary\">\n    //                     Create Stream\n    //                 </Link>\n    //             </div>\n    //         )\n    //     }\n    // }\n\n    render() {\n        return (\n            <div>\n                <GoogleAuth />\n                <h2>Mails</h2>\n                {/* <div className=\"ui celled list\">{this.renderList()}</div> */}\n                {this.renderList()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        mails: Object.values(state.mails),\n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn\n    }\n}\n\nexport default connect(mapStateToProps, { fetchMessages })(MailList);"]},"metadata":{},"sourceType":"module"}