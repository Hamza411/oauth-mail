{"ast":null,"code":"var _jsxFileName = \"/home/contegris/Documents/React-Learning/Gmail/src/components/GoogleAuth.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        console.log(this.props.signIn(this.auth.currentUser.get().getId()));\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        /* ayns actions or async api req*/\n        clientId: \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n        scope: \"https://www.googleapis.com/auth/gmail.readonly\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance(); // this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" ui red google button\",\n        onClick: this.onSignOutClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), \"SignOut\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" ui red google button\",\n        onClick: this.onSignInClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), \"SignIn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/contegris/Documents/React-Learning/Gmail/src/components/GoogleAuth.js"],"names":["React","Component","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","console","log","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAe/BK,YAf+B,GAefC,UAAD,IAAgB;AAC3B,UAAIA,UAAJ,EAAgB;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWP,MAAX,CAAkB,KAAKQ,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB,CAAZ;AACH,OAFD,MAEO;AACH,aAAKJ,KAAL,CAAWN,OAAX;AACH;AACJ,KArB8B;;AAAA,SAuB/BW,aAvB+B,GAuBf,MAAM;AAClB,WAAKJ,IAAL,CAAUR,MAAV;AACH,KAzB8B;;AAAA,SA2B/Ba,cA3B+B,GA2Bd,MAAM;AACnB,WAAKL,IAAL,CAAUP,OAAV;AACH,KA7B8B;AAAA;;AAC/Ba,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AAAS;AAC7BC,QAAAA,QAAQ,EAAE,2EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,aAAKd,IAAL,GAAYO,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ,CADU,CAEV;;AACA,aAAKrB,YAAL,CAAkB,KAAKK,IAAL,CAAUJ,UAAV,CAAqBM,GAArB,EAAlB;AACA,aAAKF,IAAL,CAAUJ,UAAV,CAAqBqB,MAArB,CAA4B,KAAKtB,YAAjC;AACH,OARD;AASH,KAVD;AAWH;;AAkBDuB,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKnB,KAAL,CAAWH,UAAX,KAA0B,IAA9B,EAAoC;AAChC,aAAO,IAAP;AACH,KAFD,MAGK,IAAI,KAAKG,KAAL,CAAWH,UAAf,EAA2B;AAC5B,0BACI;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAE,KAAKS,cAAxD;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPI,MAQA;AACD,0BACI;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAE,KAAKD,aAAxD;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;AACJ;;AAEDe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACK,KAAKD,gBAAL;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA3D8B;;AA8DnC,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAE1B,IAAAA,UAAU,EAAEyB,KAAK,CAACrB,IAAN,CAAWJ;AAAzB,GAAP;AACH,CAFD;;AAIA,eAAeL,OAAO,CAAC6B,eAAD,EAAkB;AAAE5B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\n\nclass GoogleAuth extends Component {\n    componentDidMount() {\n        window.gapi.load(\"client:auth2\", () => {\n            window.gapi.client.init({        /* ayns actions or async api req*/\n                clientId: \"1075903194307-lgglf5n8qsk3lfhr2j4k4512k60scmh7.apps.googleusercontent.com\",\n                scope: \"https://www.googleapis.com/auth/gmail.readonly\"\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                // this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange)\n            });\n        });\n    }\n\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn) {\n            console.log(this.props.signIn(this.auth.currentUser.get().getId()));\n        } else {\n            this.props.signOut();\n        }\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    }\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    }\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null\n        }\n        else if (this.props.isSignedIn) {\n            return (\n                <button className=\" ui red google button\" onClick={this.onSignOutClick}>\n                    <i className=\"google icon\" />\n                    SignOut\n                </button>\n            )\n        }\n        else {\n            return (\n                <button className=\" ui red google button\" onClick={this.onSignInClick}>\n                    <i className=\"google icon\" />\n                    SignIn\n                </button>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { isSignedIn: state.auth.isSignedIn }\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}